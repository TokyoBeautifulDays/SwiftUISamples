func CGFloattoString(_ num:CGFloat) -> String {
    return String(format:"%.2f", num)
}
struct ContentView: View {
    @GestureState var currentScale:CGFloat = 1
    @GestureState var on:Bool = false
    @State var scaleDelta:CGFloat = 0
    
    var body: some View {
        let dragGesture = MagnificationGesture(minimumScaleDelta:2)
                .updating (self.$currentScale) { value, current, transaction in
                    current = value
                    #if DEBUG
                    print("updating Scaleã€€Delta: \(current)")
                    #endif
                }
               .updating (self.$on) { value, current, transaction in
                    current = true
                    #if DEBUG
                    print("updating bool: \(current)")
                    #endif
            }
                .onChanged { value in
                    self.scaleDelta = value
                    #if DEBUG
                    print("onChanged : \(self.scaleDelta)")
                    #endif
                }
                .onEnded { on in
                    self.scaleDelta = 0
                    #if DEBUG
                    print("onEnded:")
                    #endif
                }
        
         return VStack {
                 Image(systemName:"star.fill")
                         .font(.system(size:50))
                         .foregroundColor(on ? Color.red : Color.blue)
                         .scaleEffect(currentScale)
                         .frame(width: 100, height: 100)
                         .gesture(dragGesture)
                 Text("Scale: \(CGFloattoString(scaleDelta))").font(.system(size:24))
                }
    }
}
