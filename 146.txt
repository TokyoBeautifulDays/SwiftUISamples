struct ContentView: View {
    @GestureState var current:CGPoint = CGPoint.zero
    @GestureState var on:Bool = false
    @State var startPoint:CGPoint = CGPoint.zero
    
    var body: some View {
        let dragGesture = DragGesture(minimumDistance:10, coordinateSpace: .named("mySpace"))
                .updating (self.$current) { value, current, transaction in
                    current = value.location
                    #if DEBUG
                    print("updating location: \(current)")
                    #endif
                }
            .updating (self.$on) { value, current, transaction in
                current = true
                #if DEBUG
                print("updating location: \(current)")
                #endif
            }
                .onChanged { value in
                    self.startPoint = value.startLocation
                    #if DEBUG
                    print("onChanged : \(value.startLocation)")
                    #endif
                }
                .onEnded { on in
                    self.startPoint = CGPoint.zero
                    #if DEBUG
                    print("onEnded:")
                    #endif
                }
        
         return VStack {
    
                 Image(systemName:"star.fill")
                         .font(.system(size:50))
                    .foregroundColor(on ? Color.red : Color.blue)
                         .offset(x: current.x - startPoint.x, y: current.y - startPoint.y)
                         .frame(width: 100, height: 100)
                         .gesture(dragGesture)
                } .coordinateSpace(name: "mySpace")
    }
}
