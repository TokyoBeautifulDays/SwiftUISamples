struct ContentView: View {
    @GestureState var on:Bool = false
    @State var state:Bool = false
    @State var count = 0
    
    var body: some View {
        let longPressGesture = LongPressGesture(minimumDuration:1, maximumDistance:15)
                .updating (self.$on) { value, gestureState, transaction in
                    gestureState = value
                    #if DEBUG
                    print("updating : \(value)")
                    #endif
                }
                .onChanged { state in
                    self.state = state
                    #if DEBUG
                    print("onChanged : \(state)")
                    #endif
                }
                .onEnded { on in
                    #if DEBUG
                    print("onEnded: \(on)")
                    #endif
                    self.count += 1
                    self.state = false
                }
        
         return VStack {
            Group {
                Text("Updating: " + (self.on ? "true" : "false"))
                Text("onChanged:  " + (self.state ? "true" : "false"))
                Text("onEnded: count = \(self.count)")
            }.font(Font.custom("Georgia", size:24))
                .padding()
    
            Image(systemName:"star.fill")
                .font(.system(size:50))
                .foregroundColor(on ? Color.red : Color.blue)
                    .frame(width: 100, height: 100)
                    .gesture(longPressGesture)
        }
    }
}
