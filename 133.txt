struct Line: Shape {
    func path(in rect: CGRect) -> Path {
        var path = Path()
        path.move(to: CGPoint(x:0, y: 0))
        path.addLine(to: CGPoint(x: 0, y: rect.height))
        path.addLine(to: CGPoint(x: rect.width, y: rect.height))
        path.addLine(to: CGPoint(x: rect.width, y: 0))
               path.addLine(to: CGPoint(x: 0, y: 0))
        return path
    }
}
struct ContentView: View {

let line1 = Path { path in
                        path.move(to: CGPoint(x: 0, y: 0))
    
                        path.addLine(to: CGPoint(x: 0, y: 100))
                        path.addLine(to: CGPoint(x: 100, y: 100))
                        path.addLine(to: CGPoint(x: 100, y: 0))
                        path.addLine(to: CGPoint(x: 0, y: 0))
                }
let line2 = Path { path in
                        path.addLines([CGPoint(x: 0, y: 0),
                                       CGPoint(x: 0, y: 100),
                                       CGPoint(x: 100, y: 100),
                                       CGPoint(x: 100, y: 0),
                                       CGPoint(x: 0, y: 0)])
    }
  var body: some View {
    VStack {
 // line1
        line1.stroke(Color.green,lineWidth: 5).frame(width:100, height:100)
            .overlay(Text("line1").font(.system(size:30)))
        
// line2
        line2.stroke(Color.green,lineWidth: 5).frame(width:100, height:100)
            .overlay(Text("line2").font(.system(size:30)))
        
// Line
        Line().stroke(Color.green,lineWidth: 5).frame(width:100, height:100)
            .overlay(Text("Line").font(.system(size:30)))
    }
  }
}
