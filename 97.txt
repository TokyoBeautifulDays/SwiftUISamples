struct ContentView: View {
    var body: some View {
        VStack {

// 折り返し表示
            Text("12345678901234567890123456789012345678901234567890")
                .font(.system(size:20))
                .padding()
                .frame(width:300, height:100)

// allowsTightening（文字間の詰めをするか否か）
            Text("allowsTightening")
                .font(.system(size:38))
                .allowsTightening(true)
                .padding()
                .frame(width:300, height:100)
            
// minimumScaleFactor(縮小比率)
            Text("minimumScaleFactor")
                .font(.system(size:38))
                .minimumScaleFactor(0.5)
                .padding()
                .frame(width:300, height:100)
            
// truncationMode（折り返しの仕方）
            Text("truncationMode.head\n12345678901234567890")
                .font(.system(size:20))
                .truncationMode(.head)
                .padding()
                .frame(width:250, height:100)
            
            Text("truncationMode.middle\n12345678901234567890")
                .font(.system(size:20))
                .truncationMode(.middle)
                .padding()
                .frame(width:250, height:100)
            
            Text("truncationMode.tail\n12345678901234567890")
                .font(.system(size:20))
                .truncationMode(.tail)
                .padding()
                .frame(width:250, height:100)

// fixedSize関数（折り返さない）
            Text("0123456789012345 fixedSize 678901234567890")
                .font(.system(size:20))
                .fixedSize(horizontal: true, vertical: true)
                .frame(width:100, height:100)
                .padding()
        }
    }
}
